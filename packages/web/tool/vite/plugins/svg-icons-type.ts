import type { Plugin } from "vite";

import fs from "node:fs";
import path from "node:path";
import prettier from "prettier";
import { createLogger } from "vite";

import { getFileName, pathResolve } from "../utils";

const logger = createLogger("info");

const COMMENT = "// This file is auto-generated by vite-icons-type-plugin. \n";

const wrapString = (value: string) => `'${value}'`;

export const configSvgIconsTypePlugin = (): Plugin => {
	let iconFolderPath = `${pathResolve("assets/icons")}/`;
	let outputFilePath = `${pathResolve("src/shared/ui/components/icon")}/icon.type.ts`;

	return {
		buildStart: async () => {
			if (!fs.existsSync(iconFolderPath)) {
				logger.error(`Icon folder not found: ${iconFolderPath}`);
			}

			let svgFiles = fs
				.readdirSync(iconFolderPath)
				.filter((file) => file.endsWith(".svg"))
				.map((file) => path.parse(file).name);

			let typeDefinition = `${COMMENT} export type IconName = ${svgFiles.map(wrapString).join(" | ")};`;

			let prettierConfig = await prettier.resolveConfig(process.cwd());

			typeDefinition = await prettier.format(typeDefinition, {
				...prettierConfig,
				parser: "typescript",
			});

			fs.mkdirSync(path.dirname(outputFilePath), { recursive: true });
			fs.writeFileSync(outputFilePath, typeDefinition, "utf-8");

			logger.info(`Generated: ${getFileName(outputFilePath)}`);
		},
		name: "vite-icons-type-plugin",
	};
};
